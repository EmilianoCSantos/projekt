// <auto-generated />
using System;
using DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbContext.Migrations.SqlServerDbContext
{
    [DbContext(typeof(MainDbContext.SqlServerDbContext))]
    [Migration("20251002195753_miInitial")]
    partial class miInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DbModels.UsersDbM", b =>
                {
                    b.Property<Guid>("UsersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EncryptedToken")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Seeded")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(200)");

                    b.HasKey("UsersId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Models.Attractions", b =>
                {
                    b.Property<Guid>("AttractionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EncryptedToken")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Seeded")
                        .HasColumnType("bit");

                    b.HasKey("AttractionsId");

                    b.HasIndex("LocationId");

                    b.ToTable("Attractions");

                    b.HasDiscriminator().HasValue("Attractions");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Models.Locations", b =>
                {
                    b.Property<Guid>("LocationsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EncryptedToken")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Seeded")
                        .HasColumnType("bit");

                    b.HasKey("LocationsId");

                    b.ToTable("Locations");

                    b.HasDiscriminator().HasValue("Locations");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("DbModels.AttractionsDbM", b =>
                {
                    b.HasBaseType("Models.Attractions");

                    b.HasDiscriminator().HasValue("AttractionsDbM");
                });

            modelBuilder.Entity("DbModels.LocationsDbM", b =>
                {
                    b.HasBaseType("Models.Locations");

                    b.HasDiscriminator().HasValue("LocationsDbM");
                });

            modelBuilder.Entity("Models.Attractions", b =>
                {
                    b.HasOne("Models.Locations", "Location")
                        .WithMany("Attractions")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Models.Locations", b =>
                {
                    b.Navigation("Attractions");
                });
#pragma warning restore 612, 618
        }
    }
}
